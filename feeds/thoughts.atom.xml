<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Siv Scripts - Thoughts</title><link href="http://alysivji.github.io/" rel="alternate"></link><link href="http://alysivji.github.io/feeds/thoughts.atom.xml" rel="self"></link><id>http://alysivji.github.io/</id><updated>2017-07-31T23:55:00-05:00</updated><entry><title>Flexing my Public Speaking Muscles</title><link href="http://alysivji.github.io/getting-started-with-public-speaking.html" rel="alternate"></link><published>2017-07-31T23:55:00-05:00</published><updated>2017-07-31T23:55:00-05:00</updated><author><name>Aly Sivji</name></author><id>tag:alysivji.github.io,2017-07-31:/getting-started-with-public-speaking.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;The best way to learn something is to teach someone else.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With this in mind, I started creating and presenting technical talks on a variety of subjects: &lt;a href="https://github.com/alysivji/talks/tree/master/201704-healthcare-big-data-analytics"&gt;Big Data in Healthcare&lt;/a&gt;, &lt;a href="https://github.com/alysivji/talks/tree/master/context-manager-intro"&gt;Python language features&lt;/a&gt;, &lt;a href="https://github.com/alysivji/talks/tree/master/201706-knights-tour"&gt;graph algorithms&lt;/a&gt;, etc.&lt;/p&gt;
&lt;p&gt;Similiar to how writing about side projects on this blog helped develop my ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;The best way to learn something is to teach someone else.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With this in mind, I started creating and presenting technical talks on a variety of subjects: &lt;a href="https://github.com/alysivji/talks/tree/master/201704-healthcare-big-data-analytics"&gt;Big Data in Healthcare&lt;/a&gt;, &lt;a href="https://github.com/alysivji/talks/tree/master/context-manager-intro"&gt;Python language features&lt;/a&gt;, &lt;a href="https://github.com/alysivji/talks/tree/master/201706-knights-tour"&gt;graph algorithms&lt;/a&gt;, etc.&lt;/p&gt;
&lt;p&gt;Similiar to how writing about side projects on this blog helped develop my problem solving skills, throwing myself into the deep end by presenting in front of a group of people spurred me to understand my topic in a lot more depth.&lt;/p&gt;
&lt;p&gt;This past Sunday, I gave my first conference talk. Thank you &lt;a href="https://pyohio.org/"&gt;PyOhio&lt;/a&gt; for the opportunity. My topic was &lt;a href="https://github.com/alysivji/talks/tree/master/data-science-workflows-using-docker-containers"&gt;Data Science Workflows using Docker Containers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I added a last minute wrinkle and used the Terminal to live demo my Docker workflow. It was definitely nerve-racking, but it went really well. I had more than a few people come up and thank me for clearing up some of the fuzziness they had around Docker. That felt good. If I can help even one person understand, all the hours of preparation were worth it.&lt;/p&gt;
&lt;p&gt;I guess what I'm trying to say is that everyone should give a talk to their peers. It doesn't matter the size of your audience or even the topic itself, the act of preparation will make you a better programmer and help develop your communication skills.&lt;/p&gt;
&lt;p&gt;With PyOhio wrapping up the end of my conference season, I have more time to work on side projects and write for this blog. In the meanintime, please peruse the &lt;a href="https://github.com/alysivji/talks"&gt;GitHub repo of my talks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I will post links to the recordings as soon as they are up on YouTube.&lt;/p&gt;
&lt;h2&gt;YouTube Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://youtu.be/3CKVOPPqW9Q"&gt;PyOhio talk on Data Science Workflows using Docker Containers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Updates&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;08/01&lt;/strong&gt;: Added link to PyOhio talk&lt;/li&gt;
&lt;/ul&gt;</content><category term="talks"></category></entry><entry><title>Coding in Containers: 30 Day Challenge</title><link href="http://alysivji.github.io/containerized-development-environments.html" rel="alternate"></link><published>2017-06-28T07:10:00-05:00</published><updated>2017-06-28T07:10:00-05:00</updated><author><name>Aly Sivji</name></author><id>tag:alysivji.github.io,2017-06-28:/containerized-development-environments.html</id><summary type="html">&lt;p&gt;I'm taking an Introduction to Tensorflow training class thru &lt;a href="https://www.safaribooksonline.com/home/"&gt;Safari&lt;/a&gt; this week. We were given a choice of setting up our classroom environment either in Conda or inside of a &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; container.&lt;/p&gt;
&lt;p&gt;Ever since &lt;a href="https://www.continuum.io/"&gt;Anaconda&lt;/a&gt; started getting in my way during this year's PyCon sprints, I have been moving my ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm taking an Introduction to Tensorflow training class thru &lt;a href="https://www.safaribooksonline.com/home/"&gt;Safari&lt;/a&gt; this week. We were given a choice of setting up our classroom environment either in Conda or inside of a &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; container.&lt;/p&gt;
&lt;p&gt;Ever since &lt;a href="https://www.continuum.io/"&gt;Anaconda&lt;/a&gt; started getting in my way during this year's PyCon sprints, I have been moving my development away from conda and into &lt;a href="http://python-guide-pt-br.readthedocs.io/en/latest/dev/virtualenvs/"&gt;other virtual environment tools&lt;/a&gt; that are part of the Python ecosystem. Still have conda installed on my system (and, yes, the sticker is still on my laptop), but it needs to be &lt;a href="https://twitter.com/CaiusSivjus/status/867101730986532864"&gt;activated it through a bash function&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt;  gogoconda
&lt;span class="go"&gt;Conda is activated&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now I'm all in Python 3.6.1, &lt;a href="https://pypi.python.org/pypi/virtualenv"&gt;virtualenv&lt;/a&gt;, and &lt;a href="http://virtualenvwrapper.readthedocs.io/en/latest/index.html"&gt;virtualenvwrapper&lt;/a&gt; as part of my default Python install. Even went as far as adding &lt;code&gt;alias python='python3'&lt;/code&gt; and &lt;code&gt;alias pip='pip3'&lt;/code&gt; to the bottom of my &lt;code&gt;.bash_profile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I really didn't want to go back to Conda for a single workshop, so I decide to fire up Docker and &lt;code&gt;docker build&lt;/code&gt; an image from the provided &lt;code&gt;Dockerfile&lt;/code&gt;. A few minutes (and a &lt;code&gt;docker run&lt;/code&gt;) later, I'm SSH-ed into a container and I notice that the course material are inside of the container with me. That could be a problem... whatever changes I make will disappear once this container is removed.&lt;/p&gt;
&lt;p&gt;As stated in the Docker docs, the best way to store data is through the &lt;a href="https://docs.docker.com/engine/tutorials/dockervolumes/"&gt;use of a data volume&lt;/a&gt;, i.e. a persistent folder on the local machine that is running the Docker Engine. After fixing the &lt;code&gt;Dockerfile&lt;/code&gt; and rebuilding the image, I initialize a new container using the &lt;code&gt;-v /full/path/to/local/folder:/full/path/to/folder/inside/container&lt;/code&gt; flag as part of the &lt;code&gt;docker run&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Now, the data inside of my container is actually stored in a folder on my local drive. My development environment, containing all the required dependencies for my project, is completely isolated from everything else on my system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Boom&lt;/strong&gt; üê≥ üê≥ üê≥&lt;/p&gt;
&lt;p&gt;Portability just like that. No more worrying about hardware failures and having to spend hours getting my system back to the state where &lt;em&gt;everything just worked&lt;/em&gt;. No wonder everyone loves Docker!&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;The Challenge&lt;/h2&gt;
&lt;p&gt;During the month of July, I will be doing &lt;strong&gt;all my development work&lt;/strong&gt; inside of Docker containers. No matter how trivial the task, it will be done inside of a container.&lt;/p&gt;
&lt;p&gt;Not sure how I'm going to do this at work since Docker for Windows requires Win10 and I'm stuck with Win7. Might have to run a Debian VM or use &lt;a href="https://www.docker.com/products/docker-toolbox"&gt;Docker Toolbox&lt;/a&gt;. That's on me.&lt;/p&gt;
&lt;p&gt;I plan to keep semi-detailed notes while I experiment and figure out what workflow works best. Building off a slim base image? Have a "batteries included" ready-to-go container for data analysis projects? Stay tuned!&lt;/p&gt;</content><category term="docker"></category><category term="dev-tools"></category></entry></feed>